name: Tech News Digest Scheduler

on:
  # Otomatik zamanlanmƒ±≈ü g√∂revler (UTC zamanƒ±)
  schedule:
    - cron: '*/5 * * * *'  # Her 5 dakikada bir test i√ßin
    - cron: '0 2 * * *'    # Her g√ºn saat 02:00 UTC (05:00 TR) - RSS Crawl
    - cron: '10 2 * * *'   # Her g√ºn saat 02:10 UTC (05:10 TR) - Digest Send
  
  # Manuel tetikleme
  workflow_dispatch:
    inputs:
      job_type:
        description: 'Hangi job √ßalƒ±≈ütƒ±rƒ±lsƒ±n?'
        required: true
        default: 'crawl'
        type: choice
        options:
        - crawl
        - digest
        - both
      test_time:
        description: 'Test zamanƒ± (opsiyonel)'
        required: false
        type: string
        default: ''

jobs:
  scheduler:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.10'
    
    - name: Install dependencies
      run: |
        cd backend
        pip install -r requirements.txt
    
    - name: Run RSS Crawl
      if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && (github.event.inputs.job_type == 'crawl' || github.event.inputs.job_type == 'both'))
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL || 'postgresql://tech_user:NaX5oKfmXQRVhUZjAQIGcuhJh2radSsL@dpg-d26h449r0fns73fktbh0-a.frankfurt-postgres.render.com/tech_news_db_divj' }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY || 'AIzaSyCn-mobIqvflbvSjlhHzaPlo_cPj6bx3ZM' }}
        SMTP_SERVER: ${{ secrets.SMTP_SERVER || 'smtp.gmail.com' }}
        SMTP_PORT: ${{ secrets.SMTP_PORT || '587' }}
        SMTP_USERNAME: ${{ secrets.SMTP_USERNAME || 'fatihemrertekin.74@gmail.com' }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD || 'clnc xfgd qnob hiyl' }}
        FROM_EMAIL: ${{ secrets.FROM_EMAIL || 'fatihemrertekin.74@gmail.com' }}
        FROM_NAME: ${{ secrets.FROM_NAME || 'Tech News Digest' }}
        DATABASE_TYPE: postgresql
        DAILY_CRAWL_HOUR: 2
        DAILY_CRAWL_MINUTE: 0
        DAILY_DIGEST_HOUR: 2
        DAILY_DIGEST_MINUTE: 10
      run: |
        cd backend
        python test_scheduler.py crawl
    
    - name: Run Digest Send
      if: github.event_name == 'schedule' || (github.event_name == 'workflow_dispatch' && (github.event.inputs.job_type == 'digest' || github.event.inputs.job_type == 'both'))
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL || 'postgresql://tech_user:NaX5oKfmXQRVhUZjAQIGcuhJh2radSsL@dpg-d26h449r0fns73fktbh0-a.frankfurt-postgres.render.com/tech_news_db_divj' }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY || 'AIzaSyCn-mobIqvflbvSjlhHzaPlo_cPj6bx3ZM' }}
        SMTP_SERVER: ${{ secrets.SMTP_SERVER || 'smtp.gmail.com' }}
        SMTP_PORT: ${{ secrets.SMTP_PORT || '587' }}
        SMTP_USERNAME: ${{ secrets.SMTP_USERNAME || 'fatihemrertekin.74@gmail.com' }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD || 'clnc xfgd qnob hiyl' }}
        FROM_EMAIL: ${{ secrets.FROM_EMAIL || 'fatihemrertekin.74@gmail.com' }}
        FROM_NAME: ${{ secrets.FROM_NAME || 'Tech News Digest' }}
        DATABASE_TYPE: postgresql
        DAILY_CRAWL_HOUR: 2
        DAILY_CRAWL_MINUTE: 0
        DAILY_DIGEST_HOUR: 2
        DAILY_DIGEST_MINUTE: 10
      run: |
        cd backend
        python test_scheduler.py digest
    
    - name: Run Both Jobs
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.job_type == 'both'
      env:
        DATABASE_URL: ${{ secrets.DATABASE_URL || 'postgresql://tech_user:NaX5oKfmXQRVhUZjAQIGcuhJh2radSsL@dpg-d26h449r0fns73fktbh0-a.frankfurt-postgres.render.com/tech_news_db_divj' }}
        GEMINI_API_KEY: ${{ secrets.GEMINI_API_KEY || 'AIzaSyCn-mobIqvflbvSjlhHzaPlo_cPj6bx3ZM' }}
        SMTP_SERVER: ${{ secrets.SMTP_SERVER || 'smtp.gmail.com' }}
        SMTP_PORT: ${{ secrets.SMTP_PORT || '587' }}
        SMTP_USERNAME: ${{ secrets.SMTP_USERNAME || 'fatihemrertekin.74@gmail.com' }}
        SMTP_PASSWORD: ${{ secrets.SMTP_PASSWORD || 'clnc xfgd qnob hiyl' }}
        FROM_EMAIL: ${{ secrets.FROM_EMAIL || 'fatihemrertekin.74@gmail.com' }}
        FROM_NAME: ${{ secrets.FROM_NAME || 'Tech News Digest' }}
        DATABASE_TYPE: postgresql
        DAILY_CRAWL_HOUR: 2
        DAILY_CRAWL_MINUTE: 0
        DAILY_DIGEST_HOUR: 2
        DAILY_DIGEST_MINUTE: 10
      run: |
        cd backend
        python test_scheduler.py both
    
    - name: Test Results
      if: always()
      run: |
        echo "üéØ Test tamamlandƒ±!"
        echo "üìä Job Type: ${{ github.event.inputs.job_type || 'scheduled' }}"
        echo "üïê Test Zamanƒ±: $(date)"
        echo "üåç Timezone: UTC"
        echo "üáπüá∑ T√ºrkiye Saati: $(date -d '+3 hours' '+%Y-%m-%d %H:%M:%S %Z')" 